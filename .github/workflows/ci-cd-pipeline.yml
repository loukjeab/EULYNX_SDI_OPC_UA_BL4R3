name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        working-directory: Server
        run: |
          pip install -r requirements.txt

      - name: List Files (Debug Step)
        run: |
          ls -R  # Lists all files and directories to ensure everything is accessible

      - name: Run server in the background
        working-directory: Server
        run: |
          nohup python server.py &  # Starts server.py in the background

  docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin

      - name: Build Docker image
        working-directory: Server
        run: docker build -t opcua-server -f Dockerfile .

      - name: Tag Docker image
        run: docker tag opcua-server ghcr.io/loukjeab/eulynx_sdi_opc_ua_bl4r3/server:v1

      - name: Push Docker image
        run: docker push ghcr.io/loukjeab/eulynx_sdi_opc_ua_bl4r3/server:v1

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up kind
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/latest/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind
          kind create cluster

      - name: Configure kubectl context
        run: |
          kubectl cluster-info

      - name: Deploy with Helm
        run: helm upgrade --install opcua-server Kubernetes/opcua-server/charts -f Kubernetes/opcua-server/values.yaml
